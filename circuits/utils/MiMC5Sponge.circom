pragma circom 2.1.6;

template MiMC5Feistel() {
    signal input iL;
    signal input iR;
    signal input k;

    signal output oL;
    signal output oR;

    var nRounds = 20;
    var c[20] = [
        0,
        105459342437457812771135172323083229699880076558714389201963426671496941082218,
        44701464856968139370917285707027820936722631087422041426223071261295627070036,
        41130458804021533314412899450586326522500270054983374850973845129658305660915,
        28034035305707963547093327110582394283920526326883215327933669381957202488237,
        67835101927061504797267889999629546147998413041540252422300881129244644115080,
        77038500041308678193056750316134029091500078767515237185085918316009128923853,
        104544454093982446733027218848029782092179398179105058587091749747719757285036,
        22185654124844698314055180464281947193548886457852406483524286412315521924078,
        11843198404908081669891232877866372505664551940087258443425983951700839758573,
        75730223139679823188252090137101366517592105358927914928435294176125136703785,
        63037111269339665253951994986804650300724512054442194752074821492998493619346,
        100222574878814648498017222491060355999208577101797160841662251588925373209270,
        16506531590690913941192929825193131037149846497963759319950973398493215082721,
        25870657958016487342382077423324595640085963189536902617468804520968505489214,
        3776681458614062867704305576886405923644290248776498775782616919101874199765,
        28467337724409730306364372414422354542968529509867349778522341896421740722671,
        66613445942499043245107522483384164860482134785917043209657158812816523619396,
        8730377214678666664395213446285196951160996012879518134438322009847352589864,
        71182301344205212203724160442778867079219260050250374209369439265688715521804
    ];

    signal lastOutputL[nRounds + 1];
    signal lastOutputR[nRounds + 1];

    var base[nRounds];
    signal base2[nRounds];
    signal base4[nRounds];

    lastOutputL[0] <== iL;
    lastOutputR[0] <== iR;

    for(var i = 0; i < nRounds; i++){
        base[i] = lastOutputR[i] + k + c[i];
        base2[i] <== base[i] * base[i];
        base4[i] <== base2[i] * base2[i];

        lastOutputR[i + 1] <== lastOutputL[i] + base4[i] * base[i];
        lastOutputL[i + 1] <== lastOutputR[i];
    }

    oL <== lastOutputL[nRounds];
    oR <== lastOutputR[nRounds];
}

template MiMC5Sponge(nInputs) {
    signal input k;
    signal input ins[nInputs];
    signal output o;

    signal lastR[nInputs + 1];
    signal lastC[nInputs + 1];

    lastR[0] <== 0;
    lastC[0] <== 0;

    component layers[nInputs];

    for(var i = 0; i < nInputs; i++){
        layers[i] = MiMC5Feistel();

        layers[i].iL <== lastR[i] + ins[i];
        layers[i].iR <== lastC[i];
        layers[i].k <== k;

        lastR[i + 1] <== layers[i].oL;
        lastC[i + 1] <== layers[i].oR;
    }

    o <== lastR[nInputs];
}